{"version":3,"sources":["components/LoginForm.jsx","components/NutritionInfo.jsx","components/Bowl.jsx","components/IngredientList.jsx","services/bowls.js","components/BowlBuilder.jsx","services/users.js","components/BowlList.jsx","components/Notification.jsx","components/UserPage.jsx","services/login.js","services/ingredients.js","App.js","index.js"],"names":["LoginForm","loginEvent","useState","username","setUsername","password","setPassword","onSubmit","event","preventDefault","id","type","value","onChange","target","NutritionInfo","nutrition","Object","keys","map","key","Bowl","bowl","ingredients","removeIngredient","addBowl","ingredientId","filter","ingredient","reduce","a","b","onClick","i","name","replace","toLowerCase","getIngredientName","k","hasOwnProperty","Ingredient","addIngredient","className","pricePerUnit","nutritionInfo","IngredientType","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","IngredientList","token","getAll","axios","get","response","data","create","newObject","post","update","put","then","repsonse","deleteBowl","config","headers","Authorization","delete","setToken","newToken","BowlBuilder","setNotification","setIsGoodNotification","setBowl","oatType","setOatType","milkType","setMilkType","remainingIngredients","console","log","newBowlObject","toppings","featured","onMenu","bowlService","exception","setTimeout","newBowl","concat","PresavedBowl","toggleSaveBowl","removeBowl","user","bowlsAfterDelete","savedBowls","includes","BowlList","setUser","bowls","setBowls","useEffect","window","confirm","catch","error","updatedUser","userService","remainingBowls","topping","Notification","message","isGood","UserBowls","targetBowls","setUserBowls","userBowls","UserPage","login","credentials","Home","notification","isGoodNotification","App","setIngredients","padding","useHistory","ingredientService","handleLogin","loginObject","loginService","localStorage","setItem","JSON","stringify","to","path","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5745ba3c.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst LoginForm = ({ loginEvent }) => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        loginEvent({\n            username: username || 'lotad',\n            password: password || 'button',\n        })\n        setUsername('')\n        setPassword('')\n    }\n\n    return (\n        <div>\n            <h2>login</h2>\n\n            <form onSubmit={handleSubmit}>\n                <div>\n                    username\n                    <input\n                        id=\"username\"\n                        type=\"username\"\n                        value={username}\n                        onChange={({ target }) => setUsername(target.value)}\n                    />\n                </div>\n                <div>\n                    password\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={({ target }) => setPassword(target.value)}\n                    />\n                </div>\n                <button id=\"login-button\" type=\"submit\">\n                    login\n                </button>\n                <button id=\"example-login\" type=\"submit\">\n                    use sample login\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginForm\n","import React from 'react'\n\nconst NutritionInfo = ({ nutrition }) => {\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <td>nutrition info</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(nutrition).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{key}</td>\n                                <td>{nutrition[key]}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default NutritionInfo\n","import React from 'react'\nimport NutritionInfo from './NutritionInfo'\n\nconst Bowl = ({ bowl, ingredients, removeIngredient, addBowl }) => {\n    const getIngredientName = (ingredientId) => {\n        const name = ingredients.filter(\n            (ingredient) => ingredient.id === ingredientId\n        )[0].name\n\n        return name.replace(/_/g, ' ').toLowerCase()\n    }\n\n    const getTotalPrice = () => {\n        const ingredientObjects = bowl.map(\n            (ingredientId) =>\n                ingredients.filter(\n                    (ingredient) => ingredient.id === ingredientId\n                )[0]\n        )\n        return ingredientObjects.reduce(function (a, b) {\n            return a + b['pricePerUnit']\n        }, 0)\n    }\n\n    const getTotalNutrition = () => {\n        const nutritionObjects = bowl.map(\n            (ingredientId) =>\n                ingredients.filter(\n                    (ingredient) => ingredient.id === ingredientId\n                )[0]['nutritionInfo']\n        )\n        return nutritionObjects.reduce((a, b) => {\n            for (let k in b) {\n                if (b.hasOwnProperty(k)) {\n                    a[k] = (a[k] || 0) + b[k]\n                }\n            }\n            return a\n        }, {})\n    }\n\n    return (\n        <div>\n            <p>total price: {getTotalPrice()}</p>\n            <button onClick={addBowl}>add bowl</button>\n            <div>\n                bowl contents:{' '}\n                {bowl.map(function (ingredientId, i) {\n                    return (\n                        <div key={i}>\n                            {getIngredientName(ingredientId)}\n                            <button\n                                onClick={() => removeIngredient(ingredientId)}\n                            >\n                                remove\n                            </button>\n                        </div>\n                    )\n                })}\n            </div>\n            <div>\n                bowl nutrition:{' '}\n                <NutritionInfo nutrition={getTotalNutrition()} />\n            </div>\n        </div>\n    )\n}\n\nexport default Bowl\n","import React, { useState } from 'react'\n\nconst NutritionInfo = ({ nutrition }) => {\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <td>nutrition info</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(nutrition).map(function (key) {\n                        return (\n                            <tr key={key}>\n                                <td>{key}</td>\n                                <td>{nutrition[key]}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nconst Ingredient = ({ addIngredient, ingredient }) => {\n    return (\n        <div className='container-item'>\n            <p>{ingredient.name.replace(/_/g, ' ').toLowerCase()}</p>\n            <p>price: ${ingredient.pricePerUnit}</p>\n            <NutritionInfo nutrition={ingredient.nutritionInfo} />\n            <button onClick={addIngredient}>add to bowl</button>\n        </div>\n    )\n}\n\nconst IngredientType = ({ name, ingredients, addIngredient }) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    return (\n        <div className='container'>\n            <div style={hideWhenVisible}>\n                <h3>{name}</h3>\n                <button onClick={toggleVisibility}>show {name} options</button>\n            </div>\n            <div style={showWhenVisible}>\n                <h3>{name}</h3>\n                <button onClick={toggleVisibility}>hide {name} options</button>\n                <div>\n                    {ingredients.map((ingredient) => (\n                        <Ingredient\n                            key={ingredient.id}\n                            addIngredient={() => addIngredient(ingredient.id)}\n                            ingredient={ingredient}\n                        />\n                    ))}\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nconst IngredientList = ({ ingredients, addIngredient }) => {\n    return (\n        <div>\n            <IngredientType\n                addIngredient={addIngredient}\n                name=\"oat\"\n                ingredients={ingredients.filter(\n                    (ingredient) => ingredient.type === 'oat'\n                )}\n            />\n            <IngredientType\n                addIngredient={addIngredient}\n                name=\"milk\"\n                ingredients={ingredients.filter(\n                    (ingredient) => ingredient.type === 'milk'\n                )}\n            />\n            <IngredientType\n                addIngredient={addIngredient}\n                name=\"nut\"\n                ingredients={ingredients.filter(\n                    (ingredient) => ingredient.type === 'nut'\n                )}\n            />\n            <IngredientType\n                addIngredient={addIngredient}\n                name=\"nut butter\"\n                ingredients={ingredients.filter(\n                    (ingredient) => ingredient.type === 'nut_butter'\n                )}\n            />\n            <IngredientType\n                addIngredient={addIngredient}\n                name=\"fresh fruit\"\n                ingredients={ingredients.filter(\n                    (ingredient) => ingredient.type === 'fresh_fruit'\n                )}\n            />\n            <IngredientType\n                addIngredient={addIngredient}\n                name=\"dried fruit\"\n                ingredients={ingredients.filter(\n                    (ingredient) => ingredient.type === 'dried_fruit'\n                )}\n            />\n            <IngredientType\n                addIngredient={addIngredient}\n                name=\"sweetener\"\n                ingredients={ingredients.filter(\n                    (ingredient) => ingredient.type === 'sweetener'\n                )}\n            />\n            <IngredientType\n                addIngredient={addIngredient}\n                name=\"spice\"\n                ingredients={ingredients.filter(\n                    (ingredient) => ingredient.type === 'spice'\n                )}\n            />\n        </div>\n    )\n}\n\nexport default IngredientList\n","import axios from 'axios'\nconst baseUrl = '/api/bowls'\n\nlet token = null\n\nconst setToken = (newToken) => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\n/* alternate implementation of getAll for reference \nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then((repsonse) => response.data)\n}\n*/\n\nconst create = async (newObject) => {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then((repsonse) => repsonse.data)\n}\n\nconst deleteBowl = async (id) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n    return response.data\n}\n\nexport default { getAll, create, update, deleteBowl, setToken }\n","import React, { useState } from 'react'\n\nimport Bowl from './Bowl'\nimport IngredientList from './IngredientList'\n\nimport bowlService from '../services/bowls'\n\nconst BowlBuilder = ({\n    setNotification,\n    setIsGoodNotification,\n    ingredients,\n}) => {\n    const [bowl, setBowl] = useState([])\n    const [oatType, setOatType] = useState(null)\n    const [milkType, setMilkType] = useState(null)\n\n    const addIngredient = (ingredientId) => {\n        if (\n            ingredients.filter(\n                (ingredient) => ingredient.id === ingredientId\n            )[0].type === 'oat'\n        ) {\n            let newBowl = oatType\n                ? bowl.filter((ingredient) => ingredient !== oatType)\n                : bowl\n            setOatType(ingredientId)\n            setBowl(newBowl.concat(ingredientId))\n        } else if (\n            ingredients.filter(\n                (ingredient) => ingredient.id === ingredientId\n            )[0].type === 'milk'\n        ) {\n            let newBowl = milkType\n                ? bowl.filter((ingredient) => ingredient !== milkType)\n                : bowl\n            setMilkType(ingredientId)\n            setBowl(newBowl.concat(ingredientId))\n        } else {\n            setBowl(bowl.concat(ingredientId))\n        }\n    }\n\n    const removeIngredient = (ingredientId) => {\n        const remainingIngredients = bowl.filter(\n            (ingredient) => ingredient !== ingredientId\n        )\n        setBowl(remainingIngredients)\n    }\n\n    const addBowl = () => {\n        console.log(bowl)\n        if (!oatType || !milkType) {\n            setNotification('need to select oat and milk types')\n            setIsGoodNotification(false)\n            setTimeout(() => {\n                setNotification(null)\n            }, 3000)\n        } else {\n            try {\n                const newBowlObject = {\n                    oatType: oatType,\n                    milkType: milkType,\n                    toppings: bowl.filter(\n                        (ingredient) =>\n                            ingredient !== oatType && ingredient !== milkType\n                    ),\n                    featured: false,\n                    onMenu: true,\n                }\n                bowlService.create(newBowlObject)\n                setOatType(null)\n                setMilkType(null)\n                setBowl([])\n            } catch (exception) {\n                setNotification('problem adding bowl')\n                setIsGoodNotification(false)\n                setTimeout(() => {\n                    setNotification(null)\n                }, 3000)\n            }\n        }\n    }\n    return (\n        <div>\n            <h2>bowl contents</h2>\n            <Bowl\n                bowl={bowl}\n                ingredients={ingredients}\n                removeIngredient={removeIngredient}\n                addBowl={addBowl}\n            />\n            <h2>ingredients</h2>\n            <IngredientList\n                addIngredient={addIngredient}\n                ingredients={ingredients}\n            />\n        </div>\n    )\n}\n\nexport default BowlBuilder\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = (newToken) => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst create = async (newObject) => {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then((repsonse) => repsonse.data)\n}\n\nconst deleteUser = async (id) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n    return response.data\n}\n\nexport default { getAll, create, update, deleteUser, setToken }\n","import React, { useState, useEffect } from 'react'\n\nimport NutritionInfo from './NutritionInfo'\n\nimport bowlService from '../services/bowls'\nimport userService from '../services/users'\n\nconst PresavedBowl = ({\n    bowl,\n    ingredients,\n    id,\n    toggleSaveBowl,\n    removeBowl,\n    bowlsAfterDelete,\n    user,\n}) => {\n    const getIngredientName = (ingredientId) => {\n        const name = ingredients.filter(\n            (ingredient) => ingredient.id === ingredientId\n        )[0].name\n\n        return name.replace(/_/g, ' ').toLowerCase()\n    }\n\n    const getTotalPrice = () => {\n        const ingredientObjects = bowl.map(\n            (ingredientId) =>\n                ingredients.filter(\n                    (ingredient) => ingredient.id === ingredientId\n                )[0]\n        )\n        return ingredientObjects.reduce(function (a, b) {\n            return a + b['pricePerUnit']\n        }, 0)\n    }\n\n    const getTotalNutrition = () => {\n        const nutritionObjects = bowl.map(\n            (ingredientId) =>\n                ingredients.filter(\n                    (ingredient) => ingredient.id === ingredientId\n                )[0]['nutritionInfo']\n        )\n        return nutritionObjects.reduce((a, b) => {\n            for (let k in b) {\n                if (b.hasOwnProperty(k)) {\n                    a[k] = (a[k] || 0) + b[k]\n                }\n            }\n            return a\n        }, {})\n    }\n\n    return (\n        <div className='container-item'>\n            <p>total price: {getTotalPrice()}</p>\n\n            <div>\n                bowl contents:{' '}\n                {bowl.map(function (ingredientId, i) {\n                    return <div key={i}>{getIngredientName(ingredientId)}</div>\n                })}\n            </div>\n            <div>\n                bowl nutrition:{' '}\n                <NutritionInfo nutrition={getTotalNutrition()} />\n            </div>\n            <button onClick={() => removeBowl(id)}>delete bowl</button>\n            {user ? (\n                !user.savedBowls.includes(id) ? (\n                    <button onClick={() => toggleSaveBowl(id)}>\n                        add to saved bowls\n                    </button>\n                ) : (\n                    <button onClick={() => toggleSaveBowl(id)}>\n                        removed from saved bowls\n                    </button>\n                )\n            ) : null}\n        </div>\n    )\n}\n\nconst BowlList = ({\n    ingredients,\n    user,\n    setUser,\n    setNotification,\n    setIsGoodNotification,\n}) => {\n    const [bowls, setBowls] = useState([])\n    useEffect(() => {\n        bowlService.getAll().then((bowls) => setBowls(bowls))\n    }, [])\n\n    const removeBowl = (id) => {\n        if (window.confirm(`Remove bowl?`)) {\n            bowlService\n                .deleteBowl(id)\n                .then(() => {\n                    bowlsAfterDelete(id)\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n    }\n\n    const toggleSaveBowl = (id) => {\n        let updatedUser = null\n        if (user.savedBowls.includes(id)) {\n            updatedUser = {\n                ...user,\n                savedBowls: user.savedBowls.filter((bowl) => bowl !== id),\n            }\n        } else {\n            updatedUser = {\n                ...user,\n                savedBowls: user.savedBowls.concat(id),\n            }\n        }\n\n        userService\n            .update(user.id, updatedUser)\n            .then((response) => {\n                setNotification('saved bowls updated successfully')\n                setIsGoodNotification(true)\n                setTimeout(() => {\n                    setNotification(null)\n                }, 3000)\n                setUser(updatedUser)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    const bowlsAfterDelete = (id) => {\n        const remainingBowls = bowls.filter((b) => b.id !== id)\n        setBowls(remainingBowls)\n    }\n\n    return (\n        <div className='container'>\n            <h2>presaved bowls</h2>\n            {bowls.map((bowl) => (\n                <PresavedBowl\n                    bowl={bowl.toppings\n                        .concat(bowl.oatType)\n                        .concat(bowl.milkType)\n                        .map((topping) => topping.id)}\n                    ingredients={ingredients}\n                    key={bowl.id}\n                    id={bowl.id}\n                    toggleSaveBowl={toggleSaveBowl}\n                    removeBowl={removeBowl}\n                    bowlsAfterDelete={bowlsAfterDelete}\n                    onMenu={bowl.onMenu}\n                    featured={bowl.featured}\n                    user={user}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default BowlList\n","import React from 'react'\n\nconst Notification = ({ message, isGood }) => {\n    if (message === null) {\n        return null\n    }\n\n    if (isGood) {\n        return <div className=\"good\">{message}</div>\n    } else {\n        return <div className=\"error\">{message}</div>\n    }\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Bowl from './Bowl'\n\nimport bowlService from '../services/bowls'\nimport bowls from '../services/bowls'\n\nconst UserBowls = ({ targetBowls }) => {\n    const [userBowls, setUserBowls] = useState([])\n\n    useEffect(() => {\n        bowlService.getAll().then((userBowls) => setUserBowls(userBowls))\n    }, [])\n\n    return <div>the component that displays the user's saved bowls is in progress</div>\n}\nconst UserPage = ({ user }) => {\n    return (\n        <div>\n            <p>{user.username} logged in</p>\n            <h3>saved bowls</h3>\n            <UserBowls targetBowls={user.savedBowls} />\n        </div>\n    )\n}\n\nexport default UserPage\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/ingredients'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then((response) => response.data)\n}\n\nexport default { getAll }\n","import React, { useState, useEffect } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory,\n} from 'react-router-dom'\n\nimport LoginForm from './components/LoginForm'\nimport BowlBuilder from './components/BowlBuilder'\nimport BowlList from './components/BowlList'\nimport Notification from './components/Notification'\nimport UserPage from './components/UserPage'\n\nimport loginService from './services/login'\nimport bowlService from './services/bowls'\nimport ingredientService from './services/ingredients'\nimport userService from './services/users'\n\nconst Home = ({ notification, isGoodNotification }) => {\n    return (\n        <div>\n            <Notification message={notification} isGood={isGoodNotification} />\n            <h2>Oat</h2>\n            <p>\n                This is an app for building bowls of oatmeal and saving them to\n                the database\n            </p>\n        </div>\n    )\n}\nconst App = () => {\n    const [notification, setNotification] = useState(null)\n    const [isGoodNotification, setIsGoodNotification] = useState(false)\n    const [user, setUser] = useState(null)\n    const [ingredients, setIngredients] = useState([])\n    const history = useHistory()\n\n    const padding = {\n        padding: 5,\n    }\n\n    useEffect(() => {\n        ingredientService\n            .getAll()\n            .then((ingredients) => setIngredients(ingredients))\n    }, [])\n\n    const handleLogin = async (loginObject) => {\n        try {\n            const user = await loginService.login(loginObject)\n\n            window.localStorage.setItem('loggedOatUser', JSON.stringify(user))\n            bowlService.setToken(user.token)\n            userService.setToken(user.token)\n            setUser(user)\n        } catch (exception) {\n            setNotification('wrong credentials')\n            setIsGoodNotification(false)\n            setTimeout(() => {\n                setNotification(null)\n            }, 3000)\n        }\n    }\n\n    const handleLogout = (event) => {\n        window.localStorage.removeItem('loggedOatUser')\n        setUser(null)\n    }\n\n    return (\n        <Router>\n            <div>\n                <Notification\n                    message={notification}\n                    isGood={isGoodNotification}\n                />\n                <Link style={padding} to=\"/\">\n                    home\n                </Link>\n                <Link style={padding} to=\"/build\">\n                    build\n                </Link>\n                <Link style={padding} to=\"/menu\">\n                    menu\n                </Link>\n                <Link style={padding} to=\"/profile\">\n                    profile\n                </Link>\n            </div>\n\n            <Switch>\n                <Route path=\"/build\">\n                    <BowlBuilder\n                        setNotification={setNotification}\n                        setIsGoodNotification={setIsGoodNotification}\n                        ingredients={ingredients}\n                    />\n                </Route>\n                <Route path=\"/menu\">\n                    <BowlList\n                        ingredients={ingredients}\n                        user={user}\n                        setUser={setUser}\n                        setNotification={setNotification}\n                        setIsGoodNotification={setIsGoodNotification}\n                    />\n                </Route>\n\n                <Route path=\"/profile\">\n                    {user ? (\n                        <>\n                            <UserPage user={user} />{' '}\n                            <button onClick={handleLogout}>log out</button>\n                        </>\n                    ) : (\n                        <LoginForm loginEvent={handleLogin} />\n                    )}\n                </Route>\n\n                <Route path=\"/\">\n                    <Home\n                        notification={notification}\n                        isGoodNotification={isGoodNotification}\n                    />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}